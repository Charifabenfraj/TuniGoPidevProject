{% extends 'base.html.twig' %}

{% block title %}Connexion - TuniGo{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="{{ asset('styles/login.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="login-container">
    <div class="login-header">
        <i class="fas fa-bus logo-icon"></i>
        <h1>Bienvenue sur TuniGo</h1>
        <p>Connectez-vous pour accéder à votre compte</p>
    </div>
    
    <div class="login-body">
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}

        {% if error %}
            <div class="alert alert-danger">
                {{ error.messageKey|trans(error.messageData, 'security') }}
            </div>
        {% endif %}

        <div class="floating-form">
            <h2>Connexion</h2>
            
            <form action="{{ path('app_login') }}" method="post" id="login-form" novalidate>
                <div class="floating-input-container">
                    <input type="email" id="email" name="email" value="{{ last_username }}" class="floating-input" placeholder=" " required autofocus>
                    <label for="email" class="floating-label">Email</label>
                    <div class="error-message" id="email-error"></div>
                </div>

                <div class="floating-input-container">
                    <div class="password-field">
                        <input type="password" id="password" name="password" class="floating-input" placeholder=" " required>
                        <label for="password" class="floating-label">Mot de passe</label>
                        <span class="toggle-password" onclick="togglePasswordVisibility(this)">
                            <i class="fas fa-eye-slash"></i>
                        </span>
                    </div>
                    <div class="error-message" id="password-error"></div>
                </div>

                <input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}">

                <button type="submit" class="btn-primary">
                    <i class="fas fa-sign-in-alt"></i> Se connecter
                </button>
                
                <div class="forgot-password">
                    <a href="{{ path('app_forgot_password') }}">Mot de passe oublié ?</a>
                </div>
            </form>

            <div class="register-link">
                <p>Vous n'avez pas de compte ? <a href="{{ path('app_register') }}">Créer un compte</a></p>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
<script>
// Password visibility toggle
function togglePasswordVisibility(element) {
    const passwordField = element.parentElement.querySelector('input');
    const eyeIcon = element.querySelector('i');
    
    if (passwordField.type === 'password') {
        passwordField.type = 'text';
        eyeIcon.classList.remove('fa-eye-slash');
        eyeIcon.classList.add('fa-eye');
    } else {
        passwordField.type = 'password';
        eyeIcon.classList.remove('fa-eye');
        eyeIcon.classList.add('fa-eye-slash');
    }
}

// Form validation
document.addEventListener('DOMContentLoaded', function() {
    const loginForm = document.getElementById('login-form');
    const emailInput = document.getElementById('email');
    const passwordInput = document.getElementById('password');
    const emailError = document.getElementById('email-error');
    const passwordError = document.getElementById('password-error');
    
    // Validation messages in French
    const messages = {
        emailRequired: "L'adresse email est requise",
        emailInvalid: "Veuillez saisir une adresse email valide",
        passwordRequired: "Le mot de passe est requis",
        passwordMinLength: "Le mot de passe doit contenir au moins 6 caractères"
    };
    
    // Email validation function
    function validateEmail(email) {
        const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return regex.test(email);
    }
    
    // Clear error messages when typing
    emailInput.addEventListener('input', function() {
        emailError.textContent = '';
    });
    
    passwordInput.addEventListener('input', function() {
        passwordError.textContent = '';
    });
    
    // Form submission validation
    loginForm.addEventListener('submit', function(event) {
        let isValid = true;
        
        // Email validation
        if (!emailInput.value.trim()) {
            emailError.textContent = messages.emailRequired;
            isValid = false;
        } else if (!validateEmail(emailInput.value.trim())) {
            emailError.textContent = messages.emailInvalid;
            isValid = false;
        }
        
        // Password validation
        if (!passwordInput.value) {
            passwordError.textContent = messages.passwordRequired;
            isValid = false;
        } else if (passwordInput.value.length < 6) {
            passwordError.textContent = messages.passwordMinLength;
            isValid = false;
        }
        
        if (!isValid) {
            event.preventDefault();
        }
    });
});
</script>
{% endblock %}
{% endblock %} 