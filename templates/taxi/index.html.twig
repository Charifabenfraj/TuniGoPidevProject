{% extends 'base.html.twig' %}

{% block title %}Gestion des Taxis - TuniGo{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="{{ asset('styles/admin.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="admin-container">
    <!-- Sidebar -->
    {% include 'admin/sidebar.html.twig' %}

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
            <h1 class="page-title">Gestion des Taxis</h1>
            <div class="page-actions">
                <a href="{{ path('app_taxi_new') }}" class="btn-admin btn-primary-admin">
                    <i class="fas fa-plus"></i> Ajouter un taxi
                </a>
            </div>
        </div>
        
        <div class="card-admin">
<div class="card-admin-header" style="display: flex; justify-content: space-between; align-items: center;">
    <h5 class="card-admin-title" style="margin: 0;">Liste des Taxis</h5>
    <div style="display: flex; align-items: center; gap: 8px;">
        <input type="text" id="searchInput" placeholder="Rechercher par nom, prénom, numéro..." 
               class="form-control form-control-sm" style="width: 600px;" />
        <div style="display: flex; gap: 8px;">
            <button class="btn-admin btn-outline-admin btn-sm-admin" onclick="sortTableById(true)">
                <i class="fas fa-sort-amount-down"></i> Plus récent
            </button>
            <button class="btn-admin btn-outline-admin btn-sm-admin" onclick="sortTableById(false)">
                <i class="fas fa-sort-amount-up"></i> Plus ancien
            </button>
            <button class="btn-admin btn-outline-admin btn-sm-admin" onclick="exportToExcel()">
                <i class="fas fa-file-excel"></i> Exporter
            </button>
        </div>
    </div>
</div>
            <div class="card-admin-body">
                <div class="table-responsive">
                    <table class="table-admin" id="taxiTable">
                        <thead>
                            <tr>
                                <th>#ID</th>
                                <th>Numéro du Taxi</th>
                                <th>Numéro du Chauffeur</th>
                                <th>Prénom Chauffeur</th>
                                <th>Nom Chauffeur</th>
                                <th>ID Réservation</th>
                                <th>Disponible</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for taxi in taxis %}
                            <tr class="taxi-row">
                                <td>{{ taxi.idTaxi }}</td>
                                <td>{{ taxi.numeroTaxi }}</td>
                                <td>{{ taxi.numeroChauffeur }}</td>
                                <td>{{ taxi.prenomChauffeur }}</td>
                                <td>{{ taxi.nomChauffeur }}</td>
                                <td>{{ taxi.idReservation ? taxi.idReservation : '' }}</td>
                                <td>{{ taxi.Isdisponible ? 'Oui' : 'Non' }}</td>
                                <td>
                                    <a href="{{ path('app_taxi_show', {'idTaxi': taxi.idTaxi}) }}" class="btn-action btn-view" title="Voir">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="btn-action btn-edit" data-bs-toggle="modal" data-bs-target="#editTaxiModal" 
                                            data-id="{{ taxi.idTaxi }}" data-numero="{{ taxi.numeroTaxi }}" data-chauffeur="{{ taxi.numeroChauffeur }}" 
                                            data-prenom="{{ taxi.prenomChauffeur }}" data-nom="{{ taxi.nomChauffeur }}" 
                                            data-reservation="{{ taxi.idReservation }}" data-disponible="{{ taxi.Isdisponible ? '1' : '0' }}" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn-action btn-delete" title="Supprimer" 
                                           onclick="if(confirm('Êtes-vous sûr de vouloir supprimer ce taxi?')) { 
                                               document.getElementById('delete-form-{{ taxi.idTaxi }}').submit(); 
                                           }">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                    <form id="delete-form-{{ taxi.idTaxi }}" action="{{ path('app_taxi_delete', {'idTaxi': taxi.idTaxi}) }}" method="post" style="display: none;">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ taxi.idTaxi) }}">
                                    </form>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="8" class="text-center">Aucun taxi trouvé</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Edit Taxi -->
<div class="modal fade" id="editTaxiModal" tabindex="-1" aria-labelledby="editTaxiModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editTaxiModalLabel">Modifier un Taxi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Form for editing a taxi -->
                <form id="edit-taxi-form" action="{{ path('app_taxi_edit', {'idTaxi': 0}) }}" method="post">
                    <input type="hidden" name="_method" value="PUT">
                    <input type="hidden" name="_token" value="{{ csrf_token('edit') }}">
                    <div class="form-group">
                        <label for="numeroTaxi">Numéro du Taxi</label>
                        <input type="text" class="form-control" id="numeroTaxi" name="numeroTaxi" required>
                    </div>
                    <div class="form-group">
                        <label for="numeroChauffeur">Numéro du Chauffeur</label>
                        <input type="text" class="form-control" id="numeroChauffeur" name="numeroChauffeur" required>
                    </div>
                    <div class="form-group">
                        <label for="prenomChauffeur">Prénom Chauffeur</label>
                        <input type="text" class="form-control" id="prenomChauffeur" name="prenomChauffeur" required>
                    </div>
                    <div class="form-group">
                        <label for="nomChauffeur">Nom Chauffeur</label>
                        <input type="text" class="form-control" id="nomChauffeur" name="nomChauffeur" required>
                    </div>
                    <div class="form-group">
                        <label for="idReservation">ID Réservation</label>
                        <input type="text" class="form-control" id="idReservation" name="idReservation">
                    </div>
                    <div class="form-group">
                        <label for="Isdisponible">Disponible</label>
                        <select class="form-control" id="Isdisponible" name="Isdisponible">
                            <option value="1">Oui</option>
                            <option value="0">Non</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Sauvegarder</button>
                </form>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Modal edit handling
            var editModal = document.getElementById('editTaxiModal');
            if (editModal) {
                editModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var idTaxi = button.getAttribute('data-id');
                    var numeroTaxi = button.getAttribute('data-numero');
                    var numeroChauffeur = button.getAttribute('data-chauffeur');
                    var prenomChauffeur = button.getAttribute('data-prenom');
                    var nomChauffeur = button.getAttribute('data-nom');
                    var idReservation = button.getAttribute('data-reservation');
                    var disponible = button.getAttribute('data-disponible');
                    
                    var modalForm = editModal.querySelector('form');
                    modalForm.setAttribute('action', '/taxi/' + idTaxi + '/edit');
                    modalForm.querySelector('#numeroTaxi').value = numeroTaxi;
                    modalForm.querySelector('#numeroChauffeur').value = numeroChauffeur;
                    modalForm.querySelector('#prenomChauffeur').value = prenomChauffeur;
                    modalForm.querySelector('#nomChauffeur').value = nomChauffeur;
                    modalForm.querySelector('#idReservation').value = idReservation || '';
                    modalForm.querySelector('#Isdisponible').value = disponible;
                });
            }

            // Search functionality
            document.getElementById('searchInput').addEventListener('input', function(e) {
                let searchValue = e.target.value.toLowerCase();
                let rows = document.querySelectorAll('.taxi-row');

                rows.forEach(row => {
                    let shouldShow = false;
                    // Check each cell except actions (last column)
                    for (let i = 1; i < row.cells.length - 1; i++) {
                        if (row.cells[i].textContent.toLowerCase().includes(searchValue)) {
                            shouldShow = true;
                            break;
                        }
                    }
                    row.style.display = shouldShow ? '' : 'none';
                });
            });
        });

        // Sorting functions
        function sortTableById(isDescending) {
            let tbody = document.querySelector('#taxiTable tbody');
            let rows = Array.from(tbody.querySelectorAll('tr.taxi-row'));
            
            rows.sort((a, b) => {
                let idA = parseInt(a.cells[0].textContent);
                let idB = parseInt(b.cells[0].textContent);
                return isDescending ? idB - idA : idA - idB;
            });

            // Clear and re-append rows
            tbody.innerHTML = '';
            rows.forEach(row => tbody.appendChild(row));
        }

        
        function exportToExcel() {
            // Select the table
            const table = document.getElementById('taxiTable');
            
            // Clone the table to avoid modifying the original
            const clone = table.cloneNode(true);
            
            // Remove action buttons from the clone
            const actionCells = clone.querySelectorAll('td:last-child');
            actionCells.forEach(cell => {
                cell.innerHTML = ''; // Clear actions column
            });
            
            // Create workbook
            const workbook = XLSX.utils.table_to_book(clone, {sheet: "Taxis"});
            
            // Export the file
            XLSX.writeFile(workbook, 'taxis.xlsx');
        }
    </script>
{% endblock %}