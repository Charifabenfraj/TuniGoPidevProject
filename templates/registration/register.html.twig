{% extends 'base.html.twig' %}

{% block title %}Inscription - TuniGo{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="{{ asset('styles/register.css') }}">
{% endblock %}

{% block body %}
    <div class="register-container">
        <div class="register-header">
            <i class="fas fa-subway logo-icon"></i>
            <h1>TuniGo</h1>
            <p>Créez votre compte et commencez votre voyage avec nous!</p>
        </div>
        
        <div class="register-body">
            <h2>Inscription</h2>
            {{ form_start(registrationForm, {'attr': {'class': 'floating-form', 'id': 'registration-form', 'novalidate': 'novalidate'}}) }}
                <div class="form-row">
                    <div class="form-col">
                        <div class="floating-input-container">
                            {{ form_widget(registrationForm.prenomUtilisateur, {
                                'attr': {
                                    'class': 'floating-input',
                                    'placeholder': ' ',
                                    'id': 'nom'
                                }
                            }) }}
                            <label for="nom" class="floating-label">Prénom</label>
                            <span class="error-message" id="prenom-error"></span>
                        </div>
                    </div>
                    <div class="form-col">
                        <div class="floating-input-container">
                            {{ form_widget(registrationForm.nomUtilisateur, {
                                'attr': {
                                    'class': 'floating-input',
                                    'placeholder': ' ',
                                    'id': 'prenom'
                                }
                            }) }}
                            <label for="prenom" class="floating-label">Nom</label>
                            <span class="error-message" id="nom-error"></span>
                        </div>
                    </div>
                </div>

                <div class="floating-input-container">
                    {{ form_widget(registrationForm.emailUtilisateur, {
                        'attr': {
                            'class': 'floating-input',
                            'placeholder': ' ',
                            'id': 'email'
                        }
                    }) }}
                    <label for="email" class="floating-label">Email</label>
                    <span class="error-message" id="email-error"></span>
                </div>

                <div class="floating-input-container">
                    {{ form_widget(registrationForm.numeroTelephoneUtilisateur, {
                        'attr': {
                            'class': 'floating-input',
                            'placeholder': ' ',
                            'id': 'telephone'
                        }
                    }) }}
                    <label for="telephone" class="floating-label">Numéro de téléphone</label>
                    <span class="error-message" id="telephone-error"></span>
                </div>

                <div class="select-container">
                    {{ form_widget(registrationForm.questionSecurite, {
                        'attr': {
                            'class': 'form-select',
                            'id': 'question-securite'
                        }
                    }) }}
                    <span class="error-message" id="question-error"></span>
                </div>

                <div class="floating-input-container">
                    {{ form_widget(registrationForm.reponseSecurite, {
                        'attr': {
                            'class': 'floating-input',
                            'placeholder': ' ',
                            'id': 'reponse-securite'
                        }
                    }) }}
                    <label for="reponse-securite" class="floating-label">Réponse à la question de sécurité</label>
                    <span class="error-message" id="reponse-error"></span>
                </div>

                <div class="form-row">
                    <div class="form-col">
                        <div class="floating-input-container password-field">
                            {{ form_widget(registrationForm.plainPassword.first, {
                                'attr': {
                                    'class': 'floating-input',
                                    'placeholder': ' ',
                                    'id': 'password-first'
                                }
                            }) }}
                            <label for="password-first" class="floating-label">Mot de passe</label>
                            <button type="button" class="toggle-password" onclick="togglePassword('password-first')">
                                <i class="far fa-eye"></i>
                            </button>
                            <span class="error-message" id="password-error"></span>
                        </div>
                    </div>
                    <div class="form-col">
                        <div class="floating-input-container password-field">
                            {{ form_widget(registrationForm.plainPassword.second, {
                                'attr': {
                                    'class': 'floating-input',
                                    'placeholder': ' ',
                                    'id': 'password-second'
                                }
                            }) }}
                            <label for="password-second" class="floating-label">Confirmer le mot de passe</label>
                            <button type="button" class="toggle-password" onclick="togglePassword('password-second')">
                                <i class="far fa-eye"></i>
                            </button>
                            <span class="error-message" id="confirm-password-error"></span>
                        </div>
                    </div>
                </div>

                <div class="terms-group">
                    <div class="form-check">
                        {{ form_widget(registrationForm.agreeTerms, {
                            'attr': {
                                'class': 'form-check-input',
                                'id': 'terms'
                            }
                        }) }}
                        <label class="form-check-label" for="terms">
                            J'accepte les <a href="#" style="color: var(--primary-color);">conditions d'utilisation</a>
                        </label>
                    </div>
                    <span class="error-message" id="terms-error"></span>
                </div>

                <button type="submit" class="btn-primary">
                    <i class="fas fa-user-plus me-2"></i> Créer mon compte
                </button>
            {{ form_end(registrationForm) }}

            <div class="login-link">
                Vous avez déjà un compte? <a href="{{ path('app_login') }}">Se connecter</a>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        function togglePassword(inputId) {
            const passwordInput = document.getElementById(inputId);
            const icon = passwordInput.nextElementSibling.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('registration-form');
            const prenomInput = document.getElementById('nom');
            const nomInput = document.getElementById('prenom');
            const emailInput = document.getElementById('email');
            const telephoneInput = document.getElementById('telephone');
            const questionInput = document.getElementById('question-securite');
            const reponseInput = document.getElementById('reponse-securite');
            const passwordInput = document.getElementById('password-first');
            const confirmPasswordInput = document.getElementById('password-second');
            const termsCheckbox = document.getElementById('terms');
            
            const prenomError = document.getElementById('prenom-error');
            const nomError = document.getElementById('nom-error');
            const emailError = document.getElementById('email-error');
            const telephoneError = document.getElementById('telephone-error');
            const questionError = document.getElementById('question-error');
            const reponseError = document.getElementById('reponse-error');
            const passwordError = document.getElementById('password-error');
            const confirmPasswordError = document.getElementById('confirm-password-error');
            const termsError = document.getElementById('terms-error');
            
            form.addEventListener('submit', function(event) {
                let isValid = true;
                
                // Clear all previous errors
                clearErrors();
                
                // Validate first name
                if (!prenomInput.value.trim()) {
                    showError(prenomInput, prenomError, 'Le prénom est requis');
                    isValid = false;
                }
                
                // Validate last name
                if (!nomInput.value.trim()) {
                    showError(nomInput, nomError, 'Le nom est requis');
                    isValid = false;
                }
                
                // Validate email
                if (!emailInput.value.trim()) {
                    showError(emailInput, emailError, 'L\'email est requis');
                    isValid = false;
                } else if (!isValidEmail(emailInput.value.trim())) {
                    showError(emailInput, emailError, 'Veuillez entrer un email valide');
                    isValid = false;
                }
                
                // Validate phone number
                if (!telephoneInput.value.trim()) {
                    showError(telephoneInput, telephoneError, 'Le numéro de téléphone est requis');
                    isValid = false;
                } else if (!isValidPhone(telephoneInput.value.trim())) {
                    showError(telephoneInput, telephoneError, 'Veuillez entrer un numéro de téléphone valide');
                    isValid = false;
                }
                
                // Validate security question
                if (questionInput.value === '') {
                    showError(questionInput, questionError, 'Veuillez sélectionner une question de sécurité');
                    isValid = false;
                }
                
                // Validate security answer
                if (!reponseInput.value.trim()) {
                    showError(reponseInput, reponseError, 'La réponse à la question de sécurité est requise');
                    isValid = false;
                }
                
                // Validate password
                if (!passwordInput.value) {
                    showError(passwordInput, passwordError, 'Le mot de passe est requis');
                    isValid = false;
                } else if (passwordInput.value.length < 6) {
                    showError(passwordInput, passwordError, 'Le mot de passe doit contenir au moins 6 caractères');
                    isValid = false;
                }
                
                // Validate confirm password
                if (!confirmPasswordInput.value) {
                    showError(confirmPasswordInput, confirmPasswordError, 'Veuillez confirmer votre mot de passe');
                    isValid = false;
                } else if (passwordInput.value !== confirmPasswordInput.value) {
                    showError(confirmPasswordInput, confirmPasswordError, 'Les mots de passe ne correspondent pas');
                    isValid = false;
                }
                
                // Validate terms checkbox
                if (!termsCheckbox.checked) {
                    showError(termsCheckbox, termsError, 'Vous devez accepter les conditions d\'utilisation');
                    isValid = false;
                }
                
                if (!isValid) {
                    event.preventDefault();
                }
            });
            
            // Add input event listeners for real-time validation
            prenomInput.addEventListener('input', function() {
                if (prenomInput.value.trim()) {
                    clearError(prenomInput, prenomError);
                }
            });
            
            nomInput.addEventListener('input', function() {
                if (nomInput.value.trim()) {
                    clearError(nomInput, nomError);
                }
            });
            
            emailInput.addEventListener('input', function() {
                if (emailInput.value.trim() && isValidEmail(emailInput.value.trim())) {
                    clearError(emailInput, emailError);
                }
            });
            
            telephoneInput.addEventListener('input', function() {
                if (telephoneInput.value.trim() && isValidPhone(telephoneInput.value.trim())) {
                    clearError(telephoneInput, telephoneError);
                }
            });
            
            questionInput.addEventListener('change', function() {
                if (questionInput.value !== '') {
                    clearError(questionInput, questionError);
                }
            });
            
            reponseInput.addEventListener('input', function() {
                if (reponseInput.value.trim()) {
                    clearError(reponseInput, reponseError);
                }
            });
            
            passwordInput.addEventListener('input', function() {
                if (passwordInput.value && passwordInput.value.length >= 6) {
                    clearError(passwordInput, passwordError);
                }
                
                // Check confirm password match
                if (confirmPasswordInput.value && passwordInput.value === confirmPasswordInput.value) {
                    clearError(confirmPasswordInput, confirmPasswordError);
                }
            });
            
            confirmPasswordInput.addEventListener('input', function() {
                if (confirmPasswordInput.value && passwordInput.value === confirmPasswordInput.value) {
                    clearError(confirmPasswordInput, confirmPasswordError);
                }
            });
            
            termsCheckbox.addEventListener('change', function() {
                if (termsCheckbox.checked) {
                    clearError(termsCheckbox, termsError);
                }
            });
            
            // Helper functions
            function showError(input, errorElement, message) {
                input.classList.add('input-error');
                errorElement.textContent = message;
            }
            
            function clearError(input, errorElement) {
                input.classList.remove('input-error');
                errorElement.textContent = '';
            }
            
            function clearErrors() {
                prenomError.textContent = '';
                nomError.textContent = '';
                emailError.textContent = '';
                telephoneError.textContent = '';
                questionError.textContent = '';
                reponseError.textContent = '';
                passwordError.textContent = '';
                confirmPasswordError.textContent = '';
                termsError.textContent = '';
                
                prenomInput.classList.remove('input-error');
                nomInput.classList.remove('input-error');
                emailInput.classList.remove('input-error');
                telephoneInput.classList.remove('input-error');
                questionInput.classList.remove('input-error');
                reponseInput.classList.remove('input-error');
                passwordInput.classList.remove('input-error');
                confirmPasswordInput.classList.remove('input-error');
            }
            
            function isValidEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }
            
            function isValidPhone(phone) {
                const phoneRegex = /^[0-9]{8,}$/;
                return phoneRegex.test(phone);
            }
        });
    </script>
{% endblock %} 