{% extends 'base.html.twig' %}

{% block title %}Gestion des M√©tros - TuniGo{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="{{ asset('styles/admin.css') }}" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="admin-container">
    <!-- Sidebar -->
    {% include 'admin/sidebar.html.twig' %}

    <!-- Main Content -->
    <div class="main-content">
        <div class="page-header">
            <h1 class="page-title">Gestion des M√©tros</h1>
            <div class="page-actions">
                <a href="{{ path('app_metro_new') }}" class="btn-admin btn-primary-admin">
                    <i class="fas fa-plus"></i> Ajouter un m√©tro
                </a>
            </div>
        </div>
        
        <div class="card-admin">
            <div class="card-admin-header d-flex justify-content-between align-items-center">
                <h5 class="card-admin-title">Liste des M√©tros</h5>
                <div class="d-flex justify-content-between w-100">
                    <!-- Barre de recherche √† gauche -->
                    <input type="text" id="searchInput" placeholder="Rechercher par num√©ro..." class="form-control form-control-sm" style="width: 60%;" />
                    
                    <!-- Boutons √† droite -->
                    <div class="d-flex gap-2 ml-3">
<button id="sortDesc" class="btn-admin btn-outline-admin btn-sm-admin">
    <i class="fas fa-sort-amount-down"></i> Plus r√©cent
</button>
<button id="sortAsc" class="btn-admin btn-outline-admin btn-sm-admin">
    <i class="fas fa-sort-amount-up"></i> Plus ancien
</button>

                        <button class="btn-admin btn-outline-admin btn-sm-admin" onclick="exportToExcel()">
                            <i class="fas fa-file-excel"></i> Exporter Excel
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-admin-body">
                <div class="table-responsive">
                    <table id="metroTable" class="table-admin">
                        <thead>
                            <tr>
                                <th>#ID</th>
                                <th>Num√©ro du M√©tro</th>
                                <th>ID du Trajet</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        {% for metro in metros %}
                            <tr>
                                <td>{{ metro.idMetro }}</td>
                                <td>{{ metro.numeroMetro }}</td>
                                <td>{{ metro.idTrajetMetro }}</td>
                                <td>
                                    <button class="btn-action btn-edit" data-bs-toggle="modal" data-bs-target="#editMetroModal" 
                                            data-id="{{ metro.idMetro }}" data-numero="{{ metro.numeroMetro }}" data-trajet="{{ metro.idTrajetMetro }}" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn-action btn-delete" title="Supprimer" 
                                           onclick="if(confirm('√ätes-vous s√ªr de vouloir supprimer ce m√©tro?')) { 
                                               document.getElementById('delete-form-{{ metro.idMetro }}').submit(); 
                                           }">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                    <form id="delete-form-{{ metro.idMetro }}" action="{{ path('app_metro_delete', {'idMetro': metro.idMetro}) }}" method="post" style="display: none;">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ metro.idMetro) }}">
                                    </form>
                                </td>
                            </tr>
                        {% else %}
                            <tr>
                                <td colspan="4" class="text-center">Aucun m√©tro trouv√©</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Edit Metro -->
<div class="modal fade" id="editMetroModal" tabindex="-1" aria-labelledby="editMetroModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMetroModalLabel">Modifier un M√©tro</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
            </div>
            <div class="modal-body">
                <form id="edit-metro-form" action="{{ path('app_metro_edit', {'idMetro': 0}) }}" method="post">
                    <div class="form-group">
                        <label for="numeroMetro">Num√©ro du M√©tro</label>
                        <input type="text" class="form-control" id="numeroMetro" name="numeroMetro" required>
                    </div>
                    <div class="form-group">
                        <label for="idTrajetMetro">ID du Trajet</label>
                        <input type="number" class="form-control" id="idTrajetMetro" name="idTrajetMetro" required>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Sauvegarder</button>
                </form>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', function() {

        // === üîç Recherche ===
        const searchInput = document.getElementById('searchInput');
        searchInput.addEventListener('input', function() {
            const searchValue = searchInput.value.toLowerCase();
            const rows = document.querySelectorAll('table tbody tr');
            rows.forEach(function(row) {
                const metroNumberCell = row.querySelector('td:nth-child(2)');
                if (metroNumberCell) {
                    const metroNumber = metroNumberCell.textContent.toLowerCase();
                    row.style.display = metroNumber.includes(searchValue) ? '' : 'none';
                }
            });
        });

        // === üîÉ Tri par ID ===
        function sortTableById(isDescending) {
            const table = document.querySelector('.table-admin');
            const rows = Array.from(table.querySelectorAll('tbody tr'));

            rows.sort((rowA, rowB) => {
                const idA = parseInt(rowA.cells[0].textContent);
                const idB = parseInt(rowB.cells[0].textContent);
                return isDescending ? idB - idA : idA - idB;
            });

            rows.forEach(row => table.querySelector('tbody').appendChild(row));
        }

        const sortAscButton = document.getElementById('sortAsc');
        const sortDescButton = document.getElementById('sortDesc');
        if (sortAscButton) {
            sortAscButton.addEventListener('click', () => sortTableById(false));
        }
        if (sortDescButton) {
            sortDescButton.addEventListener('click', () => sortTableById(true));
        }

        // === üìù Modal d‚Äô√©dition ===
        const editModal = document.getElementById('editMetroModal');
        editModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const id = button.getAttribute('data-id');
            const numero = button.getAttribute('data-numero');
            const trajet = button.getAttribute('data-trajet');

            const form = editModal.querySelector('form');
            form.setAttribute('action', '/metro/' + id + '/edit');
            form.querySelector('#numeroMetro').value = numero;
            form.querySelector('#idTrajetMetro').value = trajet;
        });

        const form = document.getElementById('edit-metro-form');
        form.addEventListener('submit', function (e) {
            e.preventDefault();

            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("M√©tro mis √† jour avec succ√®s!");
                    const modal = bootstrap.Modal.getInstance(editModal);
                    modal.hide();
                    location.reload();
                } else {
                    alert("Erreur lors de la mise √† jour.");
                }
            });
        });

        // Export Excel
        function exportToExcel() {
            var table = document.getElementById("metroTable");

            var workbook = XLSX.utils.table_to_book(table, { sheet: "Liste des metro" });
            XLSX.writeFile(workbook, "liste_des_metro.xlsx");
        }




    });
</script>

{% endblock %}
